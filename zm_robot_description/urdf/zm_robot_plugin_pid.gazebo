<?xml version="1.0"?>
<robot>

  <!-- ros_control plugin -->
    <gazebo>
      <plugin name="zm_robot_controller" filename="libgazebo_ros_mecanum_pid_drive.so">
        <commandTopic>cmd_vel</commandTopic>
        <odometryTopic>odom</odometryTopic>
        <odometryFrame>odom</odometryFrame>
        <robotBaseFrame>base_footprint</robotBaseFrame>
        <LeftRear>wheel_joint_1</LeftRear>
        <LeftFront>wheel_joint_2</LeftFront>
        <RightFront>wheel_joint_3</RightFront>
        <RightRear>wheel_joint_4</RightRear>
        <odometryRate>20</odometryRate>      
        <publishWheelTF>true</publishWheelTF>
        <publishWheelJointState>true</publishWheelJointState>
        <WheelTorque>30</WheelTorque>
        <WheelSeparationW>0.5</WheelSeparationW>
        <WheelSeparationL>0.6</WheelSeparationL>
        <wheelAccel>5</wheelAccel>
        <wheelDiameter>0.13</wheelDiameter>
        <publishOdom>false</publishOdom>
        <isRollerModel>true</isRollerModel>
        <dt>0.05</dt>
        <WheelInputVelTopic>zm_input_vel</WheelInputVelTopic>
        <WheelOutputVelTopic>zm_output_vel</WheelOutputVelTopic>
        <WheelPID>gazebo_mecanum_plugins_PID</WheelPID>
      </plugin>
    </gazebo>
  
  <!-- base_link -->
  <gazebo reference="base_link">
    <selfCollide>false</selfCollide>
    <gravity>true</gravity>
    <mu1>10</mu1>
    <mu2>10</mu2>
    <kp>1e30</kp>
    <kd>1e20</kd>
    <material>Gazebo/Orange</material>
  </gazebo>


  <!-- sick LiDAR 0 -->
  <gazebo reference="sick_lidar0">
    <selfCollide>false</selfCollide>
    <gravity>true</gravity>
    <mu1>30</mu1>
    <mu2>30</mu2>
    <kp>1e60</kp>
    <kd>1e50</kd>
    <material>Gazebo/Yellow</material>
  </gazebo>

  <!-- sick LiDAR 1 -->
  <gazebo reference="sick_lidar1">
    <selfCollide>false</selfCollide> 
    <gravity>true</gravity>
    <mu1>30</mu1>
    <mu2>30</mu2>
    <kp>1e60</kp>
    <kd>1e50</kd>
    <material>Gazebo/Yellow</material>
  </gazebo>

  <!-- Kinect V2 -->
  <gazebo reference="kinect_v2">
    <selfCollide>false</selfCollide>
    <gravity>true</gravity>
    <mu1>30</mu1>
    <mu2>30</mu2>
    <kp>1e60</kp>
    <kd>1e50</kd>
    <material>Gazebo/Black</material>
  </gazebo>

  <!-- sick LiDAR 0 controller -->
  <gazebo reference="sick_lidar0">
    <sensor type="gpu_ray" name="sick_LiDAR0_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619445</min_angle>
            <max_angle>2.35619445</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/sick_s30b/laser/scan0</topicName>
        <frameName>sick_lidar0</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- sick LiDAR 1 controller -->
  <gazebo reference="sick_lidar1">
    <sensor type="gpu_ray" name="sick_LiDAR1_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-2.35619445</min_angle>
            <max_angle>2.35619445</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/sick_s30b/laser/scan1</topicName>
        <frameName>sick_lidar1</frameName>
      </plugin>
    </sensor>
  </gazebo>

  <!-- kinect v2 controller -->
  <gazebo reference="kinect_v2">
    <sensor name="kinect_v2_camera" type="depth">
      <update_rate>30</update_rate>
      <camera>
        <horizontal_fov>1.047198</horizontal_fov>
        <image>
          <width>960</width>
          <height>540</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3</far>
        </clip>
      </camera>
      <plugin name="kinect_v2_controller" filename="libgazebo_ros_openni_kinect.so">
        <baseline>0.2</baseline>
        <alwaysOn>true</alwaysOn>
        <updateRate>1.0</updateRate>
        <cameraName>kinect_v2_ir</cameraName>
        <imageTopicName>/kinect_v2/color/image_raw</imageTopicName>
        <cameraInfoTopicName>/kinect_v2/color/camera_info</cameraInfoTopicName>
        <depthImageTopicName>/kinect_v2/depth/image_raw</depthImageTopicName>
        <depthImageInfoTopicName>/kinect_v2/depth/camera_info</depthImageInfoTopicName>
        <pointCloudTopicName>/kinect_v2/depth/points</pointCloudTopicName>
        <frameName>kinect_v2</frameName>
        <pointCloudCutoff>0.5</pointCloudCutoff>
        <pointCloudCutoffMax>3.0</pointCloudCutoffMax>
        <distortionK1>0.00000001</distortionK1>
        <distortionK2>0.00000001</distortionK2>
        <distortionK3>0.00000001</distortionK3>
        <distortionT1>0.00000001</distortionT1>
        <distortionT2>0.00000001</distortionT2>
        <CxPrime>0</CxPrime>
        <Cx>0</Cx>
        <Cy>0</Cy>
        <focalLength>0</focalLength>
        <hackBaseline>0</hackBaseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- IMU sensor controller -->
  <gazebo reference="IMU_sensor">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <topicName>zm_robot_imu</topicName>
        <bodyName>IMU_sensor</bodyName>
        <updateRateHZ>10.0</updateRateHZ>
        <gaussianNoise>0.0</gaussianNoise>
        <xyzOffset>0 0 0</xyzOffset>
        <rpyOffset>0 0 0</rpyOffset>
        <frameName>IMU_sensor</frameName>
        <initialOrientationAsReference>false</initialOrientationAsReference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>
</robot>
